[gd_resource type="VisualShader" load_steps=9 format=2]

[ext_resource path="res://Ball/dissolve_noisetexture.tres" type="Texture" id=1]

[sub_resource type="VisualShaderNodeInput" id=1]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id=2]
output_port_for_preview = 0
input_name = "time"

[sub_resource type="VisualShaderNodeScalarFunc" id=3]
output_port_for_preview = 0
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=4]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 3

[sub_resource type="VisualShaderNodeTexture" id=5]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=6]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=7]
output_port_for_preview = 0
function = 15

[resource]
code = "shader_type spatial;
render_mode depth_draw_alpha_prepass, cull_disabled;

uniform sampler2D tex_frg_7;


void vertex() {
// Output:0

}

void fragment() {
// Input:2
	vec3 n_out2p0;
	n_out2p0 = vec3(UV,0.0);

// Texture:7
	vec3 n_out7p0;
	float n_out7p1;
	vec4 tex_frg_7_read = texture( tex_frg_7 , n_out2p0.xy );
	n_out7p0 = tex_frg_7_read.rgb;
	n_out7p1 = tex_frg_7_read.a;

// Input:3
	float n_out3p0;
	n_out3p0 = TIME;

// ScalarFunc:4
	float n_out4p0;
	n_out4p0 = sin(n_out3p0);

// ScalarOp:5
	float n_in5p1 = 2.00000;
	float n_out5p0;
	n_out5p0 = n_out4p0 / n_in5p1;

// ScalarOp:8
	float n_out8p0;
	n_out8p0 = dot(n_out7p0,vec3(0.333333,0.333333,0.333333)) - n_out5p0;

// ScalarFunc:9
	float n_out9p0;
	n_out9p0 = round(n_out8p0);

// Output:0
	ALPHA = n_out9p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 11.4495, 58.65 )
modes/cull = 2
modes/depth_draw = 3
nodes/fragment/0/position = Vector2( 540, 80 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( -360, 100 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( -520, 340 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( -360, 340 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( -180, 340 )
nodes/fragment/7/node = SubResource( 5 )
nodes/fragment/7/position = Vector2( -200, 60 )
nodes/fragment/8/node = SubResource( 6 )
nodes/fragment/8/position = Vector2( 100, 40 )
nodes/fragment/9/node = SubResource( 7 )
nodes/fragment/9/position = Vector2( 300, 80 )
nodes/fragment/connections = PoolIntArray( 3, 0, 4, 0, 4, 0, 5, 0, 2, 0, 7, 0, 7, 0, 8, 0, 8, 0, 9, 0, 5, 0, 8, 1, 9, 0, 0, 1 )
